---
title: "Assignment 1"
---

# Assignment 1

```{r}
1 + 1
```

My first assignment has two parts.

## (a) Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler- Mustafa Baydoğan & Erdi Daşdemir

Bu sohbette Boğaziçi Üniversitesi Endüstri Mühendisliği Bölümü’nde öğretim üyesi olan ve aynı zamanda Alg Foli Software and Consulting Incorporated Company’nin kurucusu Doç. Dr. Mustafa Baydoğan; veri bilimi, makine öğrenmesi, optimizasyon ve endüstri mühendisliği uygulamalarına ilişkin çeşitli konulara değinmiştir. Akademik kariyerinden ve uzmanlık alanlarından söz ederken, veri analitiği, tahmin (prediction) yöntemleri ve karar destek sistemlerine odaklandığından bahsetmiştir.

Öncelikle endüstri mühendisliğinin temel amaçlarından biri olan problem çözme süreci ele alınmış olup, endüstri mühendislerinin karşılaştığı problemlerin çoğunlukla optimizasyon ve veri analitiği yaklaşımlarıyla çözüldüğü, bu kapsamda matematiksel modelleme, simülasyon ve olasılıksal yöntemler gibi tekniklerin kullanıldığı belirtilmiştir. Veri bilimi ile endüstri mühendisliği disiplinlerinin giderek daha fazla iç içe geçtiğinin altı çizilerek, büyük ölçekli problemlerin daha etkili yöntemlerle ele alınabileceği vurgulanmıştır.

Daha sonra tahmin ve optimizasyon tekniklerine yoğunlaşılmış, zaman serisi tahminleri, makine öğrenmesi ve veri madenciliği gibi konuların özellikle perakende sektöründe talep tahmini ve stok yönetimi sorunlarına nasıl çözüm sağladığı aktarılmıştır. Geleneksel tahmin yöntemleri ile derin öğrenmeye dayalı modeller karşılaştırıldığında makine öğrenmesinin avantajlarının bir hayli yüksek olduğundan bahsedilmiştir. Ayrıca, karar destek sistemlerindeki saydamlık açısından “açıklanabilir yapay zekâ” kavramının giderek daha büyük önem kazandığı ifade edilmiştir.

Sunumun ilerleyen kısmında, karar destek sistemlerinin lojistik ve enerji sektörlerinde nasıl kullanıldığı ayrıntılı biçimde incelenmiştir. Özellikle elektrik piyasasında üretim ve tüketim arasındaki dengenin sağlanması amacıyla yürütülen tahmin çalışmalarının önemi, yanıltıcı tahminlerin sektöre getirebileceği ekonomik zararlar çerçevesinde ele alınmış olup, enerji tahmin modellerinde makine öğrenmesinin oynadığı rol ve hata payını en aza indiren algoritmaların geliştirilmesinin gerekliliği ve önemi vurgulanmıştır.

Bununla birlikte, derin öğrenme ve yapılandırılmamış verilerin işlenmesi konularına da değinilmiştir. Geleneksel makine öğrenmesi yöntemleriyle derin öğrenme modelleri karşılaştırılarak, görüntü işleme ve metin analizi gibi yapılandırılmamış veri alanlarında derin öğrenmenin daha etkili olduğu vurgulandmış ve bu modellerde yorumlanabilirliğin güç olabildiği ve iş dünyasında karar alma süreçlerinde açıklanabilir modellere giderek daha çok ihtiyaç duyulduğuna dikkat çekilmiştir.

Ayrıca, makine öğrenmesi tekniklerinin optimizasyon problemlerine nasıl entegre edilebileceği de ele alınmıştır. Özellikle tamsayılı programlama gibi karmaşık optimizasyon sorunlarında, geçmiş çözümlerden elde edilen bilgiyle optimizasyon süreçlerinin hızlandırılabildiği ifade edilmiştir. Bu yaklaşımın, geniş lojistik operasyonları bulunan şirketler tarafından süreçleri daha verimli hâle getirmek amacıyla aktif bir biçimde araştırıldığı aktarılmıştır.

Son bölümde ise veri bilimi ile optimizasyonun yakınsamasına dair bir değerlendirme yapılmıştır ve akademik çalışmaların endüstriyel uygulamalara katabileceği değerin bir hayli yüksek olduğu vurgulanmıştır. Açıklanabilir yapay zekâ, veri kalitesi ve sağlam tahmin (robust forecasting) tekniklerinin gelecekte daha fazla önem kazanacağı belirtilmiştir. Veri bilimi alanında uzmanlaşmak isteyenlerin sadece teorik bilgiyle yetinmeyip farklı sektörlerde pratik deneyim edinmelerinin kritik olduğu da özellikle ifade edilmiştir.

## (b)

```{r}

data(mtcars)
print(colnames(mtcars))

compute_stats <- function(b) {
  list(
    mean = mean(b, na.rm = TRUE),
    median = median(b, na.rm = TRUE),
    variance = var(b, na.rm = TRUE),
    IQR = IQR(b, na.rm = TRUE),
    min = min(b, na.rm = TRUE),
    max = max(b, na.rm = TRUE)
  )
}


for (col in names(mtcars)) {
  if (is.numeric(mtcars[[col]])) {  
    cat("\nStatistics for:", col, "\n")
    print(compute_stats(mtcars[[col]]))
  }
}


statistics_sapply <- sapply(mtcars, compute_stats)

print("Applying compute_stats Using sapply()")

print(statistics_sapply)

statistics_apply <- apply(mtcars, MARGIN = 2, compute_stats)
print("Applying compute_stats Using apply()")
print(statistics_apply)

```

## (c) 

```{r}
library(dslabs)
data("na_example")
print(na_example)


na_count <- sum(is.na(na_example))
print(na_count) #Total NA values



na_indic <- which(is.na(na_example))
print(na_indic) #Indices of NA values



before_mean <- mean(na_example, na.rm = TRUE) #mean ignoring NA values
print(before_mean) #Mean before handling NA values

before_sd <- sd(na_example, na.rm = TRUE)  #standard deviation ignoring NA values
print(before_sd) #Standard Deviation before handling NA values




median_value <- median(na_example, na.rm = TRUE) # Compute the median of non-missing values


na_replaced_median <- na_example
na_replaced_median[is.na(na_replaced_median)] <- median_value # Replace NA values with the median


non_na_values <- na_example[!is.na(na_example)]
random_values <- sample(non_na_values, size = sum(is.na(na_example)), replace = TRUE) # Select a random non-missing value


na_replaced_random <- na_example
na_replaced_random[is.na(na_replaced_random)] <- random_values # Replace NA values with random values


# Version 1 (NA replaced with median)
mean_median <- mean(na_replaced_median)  #mean- NA replaced with median
print(mean_median)   #Mean after replacing NA with median
sd_median <- sd(na_replaced_median)  #standard deviation- NA replaced with median
print(sd_median)  # Standard Deviation after replacing NA with median

# Version 2 (NA replaced with random values)
mean_random <- mean(na_replaced_random)
print(mean_random) #Mean after replacing NA with random values
sd_random <- sd(na_replaced_random)
print(sd_random) #Standard Deviation after replacing NA with random values
```




